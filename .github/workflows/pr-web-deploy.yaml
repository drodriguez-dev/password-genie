# Workflow for deploying Password Genie Blazor Web Assembly Standalone web to GitHub Pages

name: CD-web

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  publish:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    name: Publish and deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Publish
        run: dotnet publish pg-wasm-pwdgen-demo/pg-wasm-pwdgen-demo.csproj -c Release -o publish --nologo

      - name: Add .nojekyll file to bypass Jekyll processing
        run: touch publish/wwwroot/.nojekyll

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './publish'          

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
