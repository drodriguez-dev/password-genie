@page "/password/random"
@using PG.Logic.Passwords.Generators
@using PG.Logic.Passwords.Generators.Entities
@using PG.Wasm.PasswordGenerator.Components.Passwords
@inject PG.Logic.Passwords.Generators.PasswordGeneratorFactory PasswordFactory

<h2>Random password generation</h2>

<div class="row mb-3">
	<div class="col-12">
		<Button Color="ButtonColor.Primary" @onclick="GenerateNewPassword"><Icon Name="IconName.BracesAsterisk" /> Generate new password </Button>
	</div>
</div>

<div class="row mb-3">
	<div class="col-12">
		<BestPasswords @ref="bestPasswordsComponent" MaxPasswords="7" />
	</div>
</div>

@code {
	private IPasswordGenerator? _generator = null;

	private BestPasswords? bestPasswordsComponent;

	protected async override void OnInitialized()
	{
		if (PasswordFactory is null)
			throw new InvalidOperationException("Password generator factory is not initialized.");

		var options = new RandomPasswordGeneratorOptions()
			{
				NumberOfPasswords = 1,
				NumberOfLetters = 8,
				NumberOfNumbers = 2,
				NumberOfSpecialCharacters = 1,
				IncludeMarkSymbols = true,
				IncludeSeparatorSymbols = true,
			};

		_generator = await Task.Run(() => PasswordFactory.Create(GeneratorType.Random, options));
	}

	private void GenerateNewPassword(MouseEventArgs e)
	{
		if (_generator is null)
			throw new InvalidOperationException("Password factory is not initialized.");

		GenerationResult generationResult = _generator.Generate();
		PasswordResult passwordResult = generationResult.Passwords[0];
		bestPasswordsComponent?.Add(passwordResult);
	}
}
